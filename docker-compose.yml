version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - lab-network

  service-discovery:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    networks:
      - lab-network
    depends_on:
      - redis
    environment:
      - NODE_ENV=docker

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - lab-network
    depends_on:
      - service-discovery
      - redis
    environment:
      - NODE_ENV=docker

  applicationmanagementservice1:
    build:
      context: ./RecruitmentManagement/ApplicationManagementService
      dockerfile: Dockerfile
    ports:
      - "5096:80"  # External:Internal
    networks:
      - lab-network
    depends_on:
      - api-gateway
      - applicationmanagementdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=applicationmanagementservice1

  applicationmanagementservice2:
    build:
      context: ./RecruitmentManagement/ApplicationManagementService
      dockerfile: Dockerfile
    ports:
      - "5097:80"
    networks:
      - lab-network
    depends_on:
      - api-gateway
      - applicationmanagementdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=applicationmanagementservice2

  jobmanagementservice1:
    build:
      context: ./RecruitmentManagement/JobManagementService
      dockerfile: Dockerfile
    ports:
      - "5062:80"
    networks:
      - lab-network
    depends_on:
      - api-gateway
      - jobmanagementdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=jobmanagementservice1

  jobmanagementservice2:
    build:
      context: ./RecruitmentManagement/JobManagementService
      dockerfile: Dockerfile
    ports:
      - "5063:80"
    networks:
      - lab-network
    depends_on:
      - api-gateway
      - jobmanagementdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=jobmanagementservice2

  
  applicationmanagementdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: applicationmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - applicationmanagement-data:/var/lib/postgresql/data
    networks:
      - lab-network

  jobmanagementdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: jobmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - jobmanagement-data:/var/lib/postgresql/data
    networks:
      - lab-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheusDocker.yml:/etc/prometheus/prometheusDocker.yml
    command:
      - "--config.file=/etc/prometheus/prometheusDocker.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    networks:
      - lab-network

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - lab-network
    volumes:
      - grafana-data:/var/lib/grafana


networks:
  lab-network:
    driver: bridge

volumes:
  applicationmanagement-data:
  jobmanagement-data:
  grafana-data:
